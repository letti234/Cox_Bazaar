//Writing the entire fucking thing from scratch fuck my fucking life

// PRODUCE SAMPLE GRIDS
////////////////////////////////////////////////////////

  //Call on study area
  var area = ee.FeatureCollection('users/salem043/ROI_V2_2023');
  Map.addLayer(area, {}, "Study area");

  print(area);

  // Specify grid size in projection, x and y units (based on projection).
  var projection='EPSG:4326'; // WGS84 lat lon
  var dx=0.01;
  var dy=0.01;

  // Make grid and visualize.
  var proj=ee.Projection(projection).scale(dx, dy);
  var grid=area.geometry().coveringGrid(proj);

  Map.addLayer(grid,{}, 'grid');
  print(grid.limit(10), "Original grid");
  
//Percent Forest
//////////////////////////////////////////////////////////

//2000

var tree = ee.ImageCollection('MODIS/006/MOD44B')
                  .filter(ee.Filter.date('2000-01-01', '2000-12-31')) 
                  .map(function(image){return image.clip(area)})
                  .select("Percent_Tree_Cover").toBands();

var grid = grid.map(function(feature) {
  return feature.set(tree.reduceRegion({
    reducer: 'mean',
    geometry: feature.geometry(),
  }));
});


//2001
var tree = ee.ImageCollection('MODIS/006/MOD44B')
                  .filter(ee.Filter.date('2001-01-01', '2001-12-31')) 
                  .map(function(image){return image.clip(area)})
                  .select("Percent_Tree_Cover").toBands();

var grid = grid.map(function(feature) {
  return feature.set(tree.reduceRegion({
    reducer: 'mean',
    geometry: feature.geometry(),
  }));
});


//2002
var tree = ee.ImageCollection('MODIS/006/MOD44B')
                  .filter(ee.Filter.date('2002-01-01', '2002-12-31')) 
                  .map(function(image){return image.clip(area)})
                  .select("Percent_Tree_Cover").toBands();

var grid = grid.map(function(feature) {
  return feature.set(tree.reduceRegion({
    reducer: 'mean',
    geometry: feature.geometry(),
  }));
});

//2003
var tree = ee.ImageCollection('MODIS/006/MOD44B')
                  .filter(ee.Filter.date('2003-01-01', '2003-12-31')) 
                  .map(function(image){return image.clip(area)})
                  .select("Percent_Tree_Cover").toBands();

var grid = grid.map(function(feature) {
  return feature.set(tree.reduceRegion({
    reducer: 'mean',
    geometry: feature.geometry(),
  }));
});


//2004
var tree = ee.ImageCollection('MODIS/006/MOD44B')
                  .filter(ee.Filter.date('2004-01-01', '2004-12-31')) 
                  .map(function(image){return image.clip(area)})
                  .select("Percent_Tree_Cover").toBands();

var grid = grid.map(function(feature) {
  return feature.set(tree.reduceRegion({
    reducer: 'mean',
    geometry: feature.geometry(),
  }));
});


//2005
var tree = ee.ImageCollection('MODIS/006/MOD44B')
                  .filter(ee.Filter.date('2005-01-01', '2005-12-31')) 
                  .map(function(image){return image.clip(area)})
                  .select("Percent_Tree_Cover").toBands();

var grid = grid.map(function(feature) {
  return feature.set(tree.reduceRegion({
    reducer: 'mean',
    geometry: feature.geometry(),
  }));
});





///Camp Measurements - distance to camp, intersects camp
///////////////////////////////////////////////////////

  
  
  
  //Remove tiles that intersect camps
  