/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[91.73623657760608, 21.919946680930916],
          [91.73623657760608, 20.599195189935884],
          [92.63711548385608, 20.599195189935884],
          [92.63711548385608, 21.919946680930916]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//Cox Bazar Land Use Change study
//Colette Salemi
//June 13th 2023

//Code exports MODIS geotiffs of pct forest, nonforest, nonveg cover and quality bands

Map.centerObject(geometry, 8);


//MODIS data 2010-2022 clipped to the study area

var data = ee.ImageCollection('MODIS/006/MOD44B').filter(ee.Filter.date('2000-01-01', '2022-12-31'))
.map(function(image){return image.clip(geometry)});

print(data);


///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Percent forest
//
///////////////////////////////////////////////////////////////////////////////////////////////////

// Define the start and end years
var startYear = 2000;
var endYear = 2020;

// Create an empty ImageCollection to store the results
var resultCollection = ee.ImageCollection([]);

// Iterate over the years
for (var year = startYear; year <= endYear; year++) {
  // Create a date range for the current year
  var startDate = ee.Date.fromYMD(year, 1, 1);
  var endDate = ee.Date.fromYMD(year, 12, 31);

  // Filter the data for the current year
  var forYear = data.filter(ee.Filter.date(startDate, endDate));

  // Select the desired band for each image in the collection
  var selectedBand = forYear.select("Percent_Tree_Cover").toBands();

  // Add the selected band to the result collection
  resultCollection = resultCollection.merge(selectedBand);
}

// Print or do something with the result collection
print('Result Collection:', resultCollection);


for (var year = startYear; year <= endYear; year++) {
  // Calculate the index in the ImageCollection for the current year
  var index = year - startYear;

  // Select the image at the calculated index
  var currentImage = ee.Image(resultCollection.toList(resultCollection.size()).get(index));

  // Print or do something with the current image
  print('Current Image for year ' + year + ':', currentImage);

  // Export the current image to Google Drive
  var exportName = 'forest_image_' + year;
  Export.image.toDrive({
    image: currentImage,
    description: exportName,
    folder: 'CB_Export', // Specify your folder
    scale: 250 // Specify the scale
  });
}
